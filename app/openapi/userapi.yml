user:
    get:
      summary: List all users
      operationId: app.api.UserView.getAll
      tags:
        - users
      responses:
        '200':
          description: An paged array of users
          content:
            application/json:
              schema:
                type: "array"
                items:
                    $ref: "./schemas.yml#/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schemas.yml#/schemas/Error"
      security: []
      
    post:
      summary: Create a user
      operationId: app.api.UserView.post
      tags:
        - users
      requestBody:
        description: User to add to the system
        content:
          application/json:
            schema:
              $ref: "./schemas.yml#/schemas/User"
      responses:
        '200':
          description: User record interpreted by backend
          content:
            application/json:
              schema:
                $ref: "./schemas.yml#/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schemas.yml#/schemas/Error"
      security: []

user/{userId}:
    get:
      summary: Info for a specific user
      operationId: app.api.UserView.get
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          description: The id of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "./schemas.yml#/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schemas.yml#/schemas/Error"
      security: []

    put:
      summary: Update a user
      operationId: app.api.UserView.put
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          description: The id of the user to update
          schema:
            type: string
      requestBody:
        description: user data to update
        content:
          application/json:
            schema:
              $ref: "./schemas.yml#/schemas/UserEditable"
      responses:
        '200':
          description: User record interpreted by backend
          content:
            application/json:
              schema:
                $ref: "./schemas.yml#/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schemas.yml#/schemas/Error"

    delete:
      summary: Delete a user
      operationId: app.api.UserView.delete
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          description: The id of the user to delete
          schema:
            type: string
      responses:
        '200':
          description: Null response
          content:
            application/json:
              schema:
                  $ref: "./schemas.yml#/schemas/Delete"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schemas.yml#/schemas/Error"

user/{userId}/admin:
    post:
      summary: make the specific user as admin
      operationId: app.api.UserAdminView.post
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          description: The id of the user to make as admin
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "./schemas.yml#/schemas/Action"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schemas.yml#/schemas/Error"

    delete:
      summary: unassign a user from Admin
      operationId: app.api.UserAdminView.delete
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          description: The id of the user to unassign from Admin
          schema:
            type: string
      responses:
        '200':
          description: Null response
          content:
            application/json:
              schema:
                  $ref: "./schemas.yml#/schemas/Action"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schemas.yml#/schemas/Error"
