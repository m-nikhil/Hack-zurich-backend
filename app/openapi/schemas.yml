schemas:

  Location:
    type: "object"
    additionalProperties: false
    properties:
      city:
        type: "string"
        readOnly: true
      state:
        type: "string"
        readOnly: true
      cityId:
        type: "string"
        writeOnly: true
      addressLine1:
        type: "string"
      addressLine2:
        type: "string"
      zipcode:
        type: "string"
      timeCreated:
        type: "string"
        format: "date-time"
        readOnly: true
      latitude:
        type: "string"
      longitute:
        type: "string"

  City:
    type: "object"
    additionalProperties: false
    description: "city name"
    properties:
      _id:
        type: "string"
        readOnly: true
      city:
        type: "string"

  ItemTag:
    type: "object"
    additionalProperties: false
    description: "Type of Ngo"
    properties:
      _id:
        type: "string"
        readOnly: true
      name:
        type: "string"

  SupplyItem:
      type: "object"
      additionalProperties: false
      required:
        - "name"
        - "quantity"
        - "tags"
      properties:
        description:
          type: "string"
        name: 
          type: "string"
        quantity: 
          type: "integer"
          minimum: 1
        tags: 
          type: "array"
          items:
            $ref: "#schemas/ItemTag"
        Price:
          type: "integer"
        DeliveryAvailable:
          type: boolean
        
  Need:
      type: "object"
      additionalProperties: false
      required:
        - "ItemName"
        - "quantity"
        - "tags"
      properties:
        _id:
          type: "string"
          readOnly: true
        timeCreated:
          type: "string"
          format: "date-time"
          readOnly: true
        timeUpdated:
          type: "string"
          format: "date-time"
          readOnly: true
        priority:
          type: string
          enum:
            - urgent
            - asap
            - anytime
        status:
          type: "string"
          enum:
            - completed
            - cancelled
            - ongoing 
          readOnly: true
        description:
          type: "string"
        ItemName: 
          type: "string"
        quantity: 
          type: "integer"
          minimum: 1
        tags: 
          type: "array"
          items:
            $ref: "#schemas/ItemTag"
        DeliveryNeeded:
          type: boolean
          default: false

  User:
      type: "object"
      additionalProperties: false
      required:
        - "password"
        - "email"
        - "firstName"
        - "lastName"
        - "phone"
      properties:
        _id:
          type: "string"
          readOnly: true
        firstName:
          type: "string"
        lastName:
          type: "string"
        email:
          type: "string"
          format: "email"
        lastlogin:
          type: "string"
          format: "date-time"
          readOnly: true
        MadeAsAdminBy:
          type: "object"
          additionalProperties: false
          description: "Date when user is converted to admin"
          readOnly: true
          properties:
            firstName:
              type: "string"
            lastName:
              type: "string"
            email:
              type: "string"
        isAdmin:
          type: "boolean"
          readOnly: true
        password:
          type: "string"
          format: "password"
          writeOnly: true
        phone:
          type: "string"
          pattern: '^\d{10}$'
        location:
          $ref: "#schemas/Location"
        needs: 
          type: "array"
          items:
            $ref: "#schemas/Need"

  UserEditable:
    type: "object"
    additionalProperties: false
    properties:
      password:
        type: "string"
        format: "password"
        writeOnly: true
      phone:
        type: "string"
        pattern: '^\d{10}$'
      location:
          $ref: "#schemas/Location"
  

  Login:
    type: "object"
    additionalProperties: false
    properties:
      email:
        type: "string"
        format: "email"
      password:
        type: "string"
        format: "password"
      confirmpassword:
        type: "string"
        format: "password"

  me: 
    type: "object"
    additionalProperties: false
    properties:
      id:
        type: "string"
        readOnly: true
      firstName:
        type: "string"
      lastName:
        type: "string"
      role:
        type: "string"

  Error:
    type: "object"
    additionalProperties: false
    required:
      - status
      - detail
    properties:
      status:
        type: integer
        format: int32
      detail:
        type: string
      title:
        type: string
      type:
        type: string

  Delete:
    type: "object"
    additionalProperties: false
    required:
      - id
    properties:
      id:
        type: string
      detail:
        type: string

  Action:
    type: "object"
    additionalProperties: false
    required:
      - id
    properties:
      id:
        type: string
      detail:
        type: string

  Static: 
    type: string
    format: base64
  

  StaticDelete:
    type: "object"
    additionalProperties: false
    required:
      - url
    properties:
      url:
        type: string
        format: uri
      detail:
        type: string

securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: app.api.AuthView.decode_token